// license-header java merge-point
// Generated by andromda-jsf cartridge (forms\FormImpl.java.vsl)
package org.fidelis.animal.web.animal;

import java.io.Serializable;
import java.util.Collection;
import java.util.Date;
import java.util.Map;
import javax.faces.model.SelectItem;
import org.apache.commons.beanutils.ConvertUtils;

/**
 * TODO: Model Documentation for org.fidelis.animal.web.animal.Details
 */
public class AnimalsDetailsFormImpl
    implements Serializable, LoadForm
{
    /**
     * Default constructor
     */
    public AnimalsDetailsFormImpl()
    {
    }

    // Action manage-animals-details formFields
    private Long id;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.id
     *
     * @return id TODO: Model Documentation for org.fidelis.animal.web.animal.id
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * Keeps track of whether or not the value of id has
     * be populated at least once.
     */
    private boolean idSet = false;

    /**
     * Indicates whether or not the value for id has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isIdSet()
    {
        return this.idSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.id
     *
     * @param idIn TODO: Model Documentation for org.fidelis.animal.web.animal.id
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
        this.idSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> idBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getIdBackingList()
    {
        return idBackingList;
    }

    /**
     * @param idBackingListIn
     */
    public void setIdBackingList(Collection<SelectItem> idBackingListIn)
    {
        this.idBackingList = idBackingListIn;
    }
    

    private String type;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.type
     *
     * @return type TODO: Model Documentation for org.fidelis.animal.web.animal.type
     */
    public String getType()
    {
        return this.type;
    }

    /**
     * Keeps track of whether or not the value of type has
     * be populated at least once.
     */
    private boolean typeSet = false;

    /**
     * Indicates whether or not the value for type has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isTypeSet()
    {
        return this.typeSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.type
     *
     * @param typeIn TODO: Model Documentation for org.fidelis.animal.web.animal.type
     */
    public void setType(String typeIn)
    {
        this.type = typeIn;
        this.typeSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> typeBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getTypeBackingList()
    {
        return typeBackingList;
    }

    /**
     * @param typeBackingListIn
     */
    public void setTypeBackingList(Collection<SelectItem> typeBackingListIn)
    {
        this.typeBackingList = typeBackingListIn;
    }
    

    private Date dateOfBirth;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.dateOfBirth
     *
     * @return dateOfBirth TODO: Model Documentation for org.fidelis.animal.web.animal.dateOfBirth
     */
    public Date getDateOfBirth()
    {
        return this.dateOfBirth;
    }

    /**
     * Keeps track of whether or not the value of dateOfBirth has
     * be populated at least once.
     */
    private boolean dateOfBirthSet = false;

    /**
     * Indicates whether or not the value for dateOfBirth has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isDateOfBirthSet()
    {
        return this.dateOfBirthSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.dateOfBirth
     *
     * @param dateOfBirthIn TODO: Model Documentation for org.fidelis.animal.web.animal.dateOfBirth
     */
    public void setDateOfBirth(Date dateOfBirthIn)
    {
        this.dateOfBirth = dateOfBirthIn;
        this.dateOfBirthSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> dateOfBirthBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getDateOfBirthBackingList()
    {
        return dateOfBirthBackingList;
    }

    /**
     * @param dateOfBirthBackingListIn
     */
    public void setDateOfBirthBackingList(Collection<SelectItem> dateOfBirthBackingListIn)
    {
        this.dateOfBirthBackingList = dateOfBirthBackingListIn;
    }
    

    private String breed;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.breed
     *
     * @return breed TODO: Model Documentation for org.fidelis.animal.web.animal.breed
     */
    public String getBreed()
    {
        return this.breed;
    }

    /**
     * Keeps track of whether or not the value of breed has
     * be populated at least once.
     */
    private boolean breedSet = false;

    /**
     * Indicates whether or not the value for breed has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isBreedSet()
    {
        return this.breedSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.breed
     *
     * @param breedIn TODO: Model Documentation for org.fidelis.animal.web.animal.breed
     */
    public void setBreed(String breedIn)
    {
        this.breed = breedIn;
        this.breedSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> breedBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getBreedBackingList()
    {
        return breedBackingList;
    }

    /**
     * @param breedBackingListIn
     */
    public void setBreedBackingList(Collection<SelectItem> breedBackingListIn)
    {
        this.breedBackingList = breedBackingListIn;
    }
    

    private String recordType;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.recordType
     *
     * @return recordType TODO: Model Documentation for org.fidelis.animal.web.animal.recordType
     */
    public String getRecordType()
    {
        return this.recordType;
    }

    /**
     * Keeps track of whether or not the value of recordType has
     * be populated at least once.
     */
    private boolean recordTypeSet = false;

    /**
     * Indicates whether or not the value for recordType has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isRecordTypeSet()
    {
        return this.recordTypeSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.recordType
     *
     * @param recordTypeIn TODO: Model Documentation for org.fidelis.animal.web.animal.recordType
     */
    public void setRecordType(String recordTypeIn)
    {
        this.recordType = recordTypeIn;
        this.recordTypeSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> recordTypeBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getRecordTypeBackingList()
    {
        return recordTypeBackingList;
    }

    /**
     * @param recordTypeBackingListIn
     */
    public void setRecordTypeBackingList(Collection<SelectItem> recordTypeBackingListIn)
    {
        this.recordTypeBackingList = recordTypeBackingListIn;
    }
    

    private Collection documents;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.documents
     *
     * @return documents TODO: Model Documentation for org.fidelis.animal.web.animal.documents
     */
    public Collection getDocuments()
    {
        return this.documents;
    }

    /**
     * Keeps track of whether or not the value of documents has
     * be populated at least once.
     */
    private boolean documentsSet = false;

    /**
     * Indicates whether or not the value for documents has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isDocumentsSet()
    {
        return this.documentsSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.animal.documents
     *
     * @param documentsIn TODO: Model Documentation for org.fidelis.animal.web.animal.documents
     */
    public void setDocuments(Collection documentsIn)
    {
        this.documents = documentsIn;
        this.documentsSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> documentsBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getDocumentsBackingList()
    {
        return documentsBackingList;
    }

    /**
     * @param documentsBackingListIn
     */
    public void setDocumentsBackingList(Collection<SelectItem> documentsBackingListIn)
    {
        this.documentsBackingList = documentsBackingListIn;
    }
    


    /*
     * Append this form's fields and values to a Map
     *
     * @param dest the destination Map
     */  
    public Map<String,Object> copyTo(Map<String,Object> dest)
    {
        if(this.idSet)
        {
            dest.put("id",this.id);
        }
        if(this.typeSet)
        {
            dest.put("type",this.type);
        }
        if(this.dateOfBirthSet)
        {
            dest.put("dateOfBirth",this.dateOfBirth);
        }
        if(this.breedSet)
        {
            dest.put("breed",this.breed);
        }
        if(this.recordTypeSet)
        {
            dest.put("recordType",this.recordType);
        }
        if(this.documentsSet)
        {
            dest.put("documents",this.documents);
        }
        return dest;
    }

    /*
     * Fills this form using values of a Map
     *
     * @param source the source Map
     */     
     public AnimalsDetailsFormImpl copyFrom(Map<String,Object> source)
    {
        if(source.containsKey("id"))
        {
            this.setId((Long)ConvertUtils.convert(source.get("id"),Long.class));
        }
        if(source.containsKey("type"))
        {
            this.setType((String)ConvertUtils.convert(source.get("type"),String.class));
        }
        if(source.containsKey("dateOfBirth"))
        {
            this.setDateOfBirth((Date)ConvertUtils.convert(source.get("dateOfBirth"),Date.class));
        }
        if(source.containsKey("breed"))
        {
            this.setBreed((String)ConvertUtils.convert(source.get("breed"),String.class));
        }
        if(source.containsKey("recordType"))
        {
            this.setRecordType((String)ConvertUtils.convert(source.get("recordType"),String.class));
        }
        if(source.containsKey("documents"))
        {
            this.setDocuments((Collection)source.get("documents"));
        }
        return this;
    }

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -4228528444992514596L;
}