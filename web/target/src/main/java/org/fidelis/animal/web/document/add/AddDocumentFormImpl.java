// license-header java merge-point
// Generated by andromda-jsf cartridge (forms\FormImpl.java.vsl)
package org.fidelis.animal.web.document.add;

import java.io.Serializable;
import java.util.Collection;
import java.util.Map;
import javax.faces.model.SelectItem;
import javax.validation.constraints.NotNull;
import org.apache.commons.beanutils.ConvertUtils;
import org.primefaces.model.UploadedFile;

/**
 * TODO: Model Documentation for org.fidelis.animal.web.document.add.loadOptions
 */
public class AddDocumentFormImpl
    implements Serializable, LoadOptionsForm
{
    /**
     * Default constructor
     */
    public AddDocumentFormImpl()
    {
    }

    // Action add-document-load-options formFields
    @NotNull
    private String recordType;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.recordType
     *
     * @return recordType TODO: Model Documentation for org.fidelis.animal.web.document.add.recordType
     */
    public String getRecordType()
    {
        return this.recordType;
    }

    /**
     * Keeps track of whether or not the value of recordType has
     * be populated at least once.
     */
    private boolean recordTypeSet = false;

    /**
     * Indicates whether or not the value for recordType has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isRecordTypeSet()
    {
        return this.recordTypeSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.recordType
     *
     * @param recordTypeIn TODO: Model Documentation for org.fidelis.animal.web.document.add.recordType
     */
    public void setRecordType(String recordTypeIn)
    {
        this.recordType = recordTypeIn;
        this.recordTypeSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> recordTypeBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getRecordTypeBackingList()
    {
        return recordTypeBackingList;
    }

    /**
     * @param recordTypeBackingListIn
     */
    public void setRecordTypeBackingList(Collection<SelectItem> recordTypeBackingListIn)
    {
        this.recordTypeBackingList = recordTypeBackingListIn;
    }
    

    private Long reference;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.reference
     *
     * @return reference TODO: Model Documentation for org.fidelis.animal.web.document.add.reference
     */
    public Long getReference()
    {
        return this.reference;
    }

    /**
     * Keeps track of whether or not the value of reference has
     * be populated at least once.
     */
    private boolean referenceSet = false;

    /**
     * Indicates whether or not the value for reference has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isReferenceSet()
    {
        return this.referenceSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.reference
     *
     * @param referenceIn TODO: Model Documentation for org.fidelis.animal.web.document.add.reference
     */
    public void setReference(Long referenceIn)
    {
        this.reference = referenceIn;
        this.referenceSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> referenceBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getReferenceBackingList()
    {
        return referenceBackingList;
    }

    /**
     * @param referenceBackingListIn
     */
    public void setReferenceBackingList(Collection<SelectItem> referenceBackingListIn)
    {
        this.referenceBackingList = referenceBackingListIn;
    }
    

    private Long id;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.id
     *
     * @return id TODO: Model Documentation for org.fidelis.animal.web.document.add.id
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * Keeps track of whether or not the value of id has
     * be populated at least once.
     */
    private boolean idSet = false;

    /**
     * Indicates whether or not the value for id has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isIdSet()
    {
        return this.idSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.id
     *
     * @param idIn TODO: Model Documentation for org.fidelis.animal.web.document.add.id
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
        this.idSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> idBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getIdBackingList()
    {
        return idBackingList;
    }

    /**
     * @param idBackingListIn
     */
    public void setIdBackingList(Collection<SelectItem> idBackingListIn)
    {
        this.idBackingList = idBackingListIn;
    }
    

    @NotNull
    private String documentType;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.documentType
     *
     * @return documentType TODO: Model Documentation for org.fidelis.animal.web.document.add.documentType
     */
    public String getDocumentType()
    {
        return this.documentType;
    }

    /**
     * Keeps track of whether or not the value of documentType has
     * be populated at least once.
     */
    private boolean documentTypeSet = false;

    /**
     * Indicates whether or not the value for documentType has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isDocumentTypeSet()
    {
        return this.documentTypeSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.documentType
     *
     * @param documentTypeIn TODO: Model Documentation for org.fidelis.animal.web.document.add.documentType
     */
    public void setDocumentType(String documentTypeIn)
    {
        this.documentType = documentTypeIn;
        this.documentTypeSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> documentTypeBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getDocumentTypeBackingList()
    {
        return documentTypeBackingList;
    }

    /**
     * @param documentTypeBackingListIn
     */
    public void setDocumentTypeBackingList(Collection<SelectItem> documentTypeBackingListIn)
    {
        this.documentTypeBackingList = documentTypeBackingListIn;
    }
    

    private String description;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.description
     *
     * @return description TODO: Model Documentation for org.fidelis.animal.web.document.add.description
     */
    public String getDescription()
    {
        return this.description;
    }

    /**
     * Keeps track of whether or not the value of description has
     * be populated at least once.
     */
    private boolean descriptionSet = false;

    /**
     * Indicates whether or not the value for description has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isDescriptionSet()
    {
        return this.descriptionSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.description
     *
     * @param descriptionIn TODO: Model Documentation for org.fidelis.animal.web.document.add.description
     */
    public void setDescription(String descriptionIn)
    {
        this.description = descriptionIn;
        this.descriptionSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> descriptionBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getDescriptionBackingList()
    {
        return descriptionBackingList;
    }

    /**
     * @param descriptionBackingListIn
     */
    public void setDescriptionBackingList(Collection<SelectItem> descriptionBackingListIn)
    {
        this.descriptionBackingList = descriptionBackingListIn;
    }
    

    @NotNull
    private UploadedFile document;

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.document
     *
     * @return document TODO: Model Documentation for org.fidelis.animal.web.document.add.document
     */
    public UploadedFile getDocument()
    {
        return this.document;
    }

    /**
     * Keeps track of whether or not the value of document has
     * be populated at least once.
     */
    private boolean documentSet = false;

    /**
     * Indicates whether or not the value for document has been set at least
     * once.
     *
     * @return true/false
     */
    public boolean isDocumentSet()
    {
        return this.documentSet;
    }

    /**
     * TODO: Model Documentation for org.fidelis.animal.web.document.add.document
     *
     * @param documentIn TODO: Model Documentation for org.fidelis.animal.web.document.add.document
     */
    public void setDocument(UploadedFile documentIn)
    {
        this.document = documentIn;
        this.documentSet = true;
    }

    /**
     * Stores the label/value pairs.
     */
    private Collection<SelectItem> documentBackingList;


    /**
     * @return backingList Collection<SelectItem>
     */
    public Collection<SelectItem> getDocumentBackingList()
    {
        return documentBackingList;
    }

    /**
     * @param documentBackingListIn
     */
    public void setDocumentBackingList(Collection<SelectItem> documentBackingListIn)
    {
        this.documentBackingList = documentBackingListIn;
    }
    


    /*
     * Append this form's fields and values to a Map
     *
     * @param dest the destination Map
     */  
    public Map<String,Object> copyTo(Map<String,Object> dest)
    {
        if(this.recordTypeSet)
        {
            dest.put("recordType",this.recordType);
        }
        if(this.referenceSet)
        {
            dest.put("reference",this.reference);
        }
        if(this.idSet)
        {
            dest.put("id",this.id);
        }
        if(this.documentTypeSet)
        {
            dest.put("documentType",this.documentType);
        }
        if(this.descriptionSet)
        {
            dest.put("description",this.description);
        }
        if(this.documentSet)
        {
            dest.put("document",this.document);
        }
        return dest;
    }

    /*
     * Fills this form using values of a Map
     *
     * @param source the source Map
     */     
     public AddDocumentFormImpl copyFrom(Map<String,Object> source)
    {
        if(source.containsKey("recordType"))
        {
            this.setRecordType((String)ConvertUtils.convert(source.get("recordType"),String.class));
        }
        if(source.containsKey("reference"))
        {
            this.setReference((Long)ConvertUtils.convert(source.get("reference"),Long.class));
        }
        if(source.containsKey("id"))
        {
            this.setId((Long)ConvertUtils.convert(source.get("id"),Long.class));
        }
        if(source.containsKey("documentType"))
        {
            this.setDocumentType((String)ConvertUtils.convert(source.get("documentType"),String.class));
        }
        if(source.containsKey("description"))
        {
            this.setDescription((String)ConvertUtils.convert(source.get("description"),String.class));
        }
        if(source.containsKey("document"))
        {
            this.setDocument((UploadedFile)ConvertUtils.convert(source.get("document"),UploadedFile.class));
        }
        return this;
    }

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 5914328440248757004L;
}