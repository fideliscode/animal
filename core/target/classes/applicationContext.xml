<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Generated by applicationContext.xml.vsl in andromda-spring-cartridge on 04/03/2022 18:05:29+0300. Do not modify by hand!. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd">

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>

    <!-- applicationContext merge-point -->
    <bean id="hibernateMappingLocations" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <!-- applicationContext hibernateMappingLocations merge-point -->
                <value>classpath:org/fidelis/animal/model/animal/Animal.hbm.xml</value>
                <value>classpath:org/fidelis/animal/model/feed/Feed.hbm.xml</value>
                <value>classpath:org/fidelis/animal/model/document/Document.hbm.xml</value>
            </list>
         </property>
    </bean>

    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.default_batch_fetch_size">16</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
                <!-- add specific (non-supported in the Spring cartridge) hibernate properties here -->
            </props>
        </property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" ref="hibernateMappingLocations"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <!-- applicationContext sessionFactory merge-point -->
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
 
    <!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>

    <bean id="org.fidelis.animal.model.animal.AnimalDaoImpl" class="org.fidelis.animal.model.animal.AnimalDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- Animal entity property merge-point -->
    </bean>

    <!-- Animal Entity Proxy with inner Animal Entity implementation -->
    <bean id="animalDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.fidelis.animal.model.animal.AnimalDaoImpl"/>
        <property name="proxyInterfaces" value="org.fidelis.animal.model.animal.AnimalDao"/>
    </bean>

    <bean id="org.fidelis.animal.model.feed.FeedDaoImpl" class="org.fidelis.animal.model.feed.FeedDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- Feed entity property merge-point -->
    </bean>

    <!-- Feed Entity Proxy with inner Feed Entity implementation -->
    <bean id="feedDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.fidelis.animal.model.feed.FeedDaoImpl"/>
        <property name="proxyInterfaces" value="org.fidelis.animal.model.feed.FeedDao"/>
    </bean>

    <bean id="org.fidelis.animal.model.document.DocumentDaoImpl" class="org.fidelis.animal.model.document.DocumentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- Document entity property merge-point -->
    </bean>

    <!-- Document Entity Proxy with inner Document Entity implementation -->
    <bean id="documentDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.fidelis.animal.model.document.DocumentDaoImpl"/>
        <property name="proxyInterfaces" value="org.fidelis.animal.model.document.DocumentDao"/>
    </bean>

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <!-- Service Transactional Interceptor -->
    <bean id="serviceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributeSource">
            <value>
                org.fidelis.animal.model.animal.AnimalService.search=PROPAGATION_REQUIRED
                org.fidelis.animal.model.animal.AnimalService.loadAll=PROPAGATION_REQUIRED
                org.fidelis.animal.model.animal.AnimalService.load=PROPAGATION_REQUIRED
                org.fidelis.animal.model.animal.AnimalService.add=PROPAGATION_REQUIRED
                org.fidelis.animal.model.animal.AnimalService.update=PROPAGATION_REQUIRED
                org.fidelis.animal.model.feed.FeedService.search=PROPAGATION_REQUIRED
                org.fidelis.animal.model.feed.FeedService.loadAll=PROPAGATION_REQUIRED
                org.fidelis.animal.model.feed.FeedService.load=PROPAGATION_REQUIRED
                org.fidelis.animal.model.feed.FeedService.add=PROPAGATION_REQUIRED
                org.fidelis.animal.model.feed.FeedService.update=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.search=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.loadAll=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.load=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.add=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.loadByRecordType=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.loadByTypeAndReference=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.loadByTypeAndReferenceAndRecordType=PROPAGATION_REQUIRED
                org.fidelis.animal.model.document.DocumentService.loadByRecordTypeAndReference=PROPAGATION_REQUIRED
            </value>
        </property>
    <!-- applicationContext serviceTransactionInterceptor merge-point -->
    </bean>

    <bean id="org.fidelis.animal.model.animal.AnimalServiceImpl" class="org.fidelis.animal.model.animal.AnimalServiceImpl" >
        <property name="animalDao" ref="animalDao"/>
        <property name="feedDao" ref="feedDao"/>
        <!-- AnimalService service property merge-point -->
    </bean>

    <!-- AnimalService Service Proxy with inner AnimalService Service Implementation -->
    <bean id="animalService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.fidelis.animal.model.animal.AnimalServiceImpl"/>
        <property name="proxyInterfaces" value="org.fidelis.animal.model.animal.AnimalService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.fidelis.animal.model.feed.FeedServiceImpl" class="org.fidelis.animal.model.feed.FeedServiceImpl" >
        <property name="feedDao" ref="feedDao"/>
        <!-- FeedService service property merge-point -->
    </bean>

    <!-- FeedService Service Proxy with inner FeedService Service Implementation -->
    <bean id="feedService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.fidelis.animal.model.feed.FeedServiceImpl"/>
        <property name="proxyInterfaces" value="org.fidelis.animal.model.feed.FeedService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="org.fidelis.animal.model.document.DocumentServiceImpl" class="org.fidelis.animal.model.document.DocumentServiceImpl" >
        <property name="documentDao" ref="documentDao"/>
        <!-- DocumentService service property merge-point -->
    </bean>

    <!-- DocumentService Service Proxy with inner DocumentService Service Implementation -->
    <bean id="documentService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="org.fidelis.animal.model.document.DocumentServiceImpl"/>
        <property name="proxyInterfaces" value="org.fidelis.animal.model.document.DocumentService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->

</beans>
