// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 02/17/2022 20:33:35+0300.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.fidelis.animal.model.animal;

/**
 * @see Animal
 */
public class AnimalDaoImpl
        extends AnimalDaoBase {

    /**
     * {@inheritDoc}
     */
    @Override
    public void toAnimalVO(
            Animal source,
            AnimalVO target) {
        // TODO verify behavior of toAnimalVO
        super.toAnimalVO(source, target);
        // WARNING! No conversion for target.type (can't convert source.getType():org.fidelis.animal.model.animal.AnimalType to java.lang.String
        target.setType(source.getType().getValue());
        if (source.getBreed() != null) {
            target.setBreed(source.getBreed().getValue());
        }
        if (source.getFeed() != null) {
            target.setFeedId(source.getFeed().getId());
            target.setFeedCode(source.getFeed().getCode());
            target.setFeedName(source.getFeed().getName());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnimalVO toAnimalVO(final Animal entity) {
        // TODO verify behavior of toAnimalVO
        return super.toAnimalVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value
     * object from the object store. If no such entity object exists in the
     * object store, a new, blank entity is created
     */
    private Animal loadAnimalFromAnimalVO(AnimalVO animalVO) {
        // TODO implement loadAnimalFromAnimalVO
        throw new UnsupportedOperationException("org.fidelis.animal.model.animal.loadAnimalFromAnimalVO(AnimalVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (animalVO.getId() == null)
        {
            return  Animal.Factory.newInstance();
        }
        else
        {
            return this.load(animalVO.getId());
        }
         */
    }

    /**
     * {@inheritDoc}
     */
    public Animal animalVOToEntity(AnimalVO animalVO) {
        // TODO verify behavior of animalVOToEntity
        Animal entity = this.loadAnimalFromAnimalVO(animalVO);
        this.animalVOToEntity(animalVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void animalVOToEntity(
            AnimalVO source,
            Animal target,
            boolean copyIfNull) {
        // TODO verify behavior of animalVOToEntity
        super.animalVOToEntity(source, target, copyIfNull);
        // No conversion for target.type (can't convert source.getType():java.lang.String to org.fidelis.animal.model.animal.AnimalType
    }
}
